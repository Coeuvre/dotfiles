if &compatible
  set nocompatible
endif

set runtimepath+=~/AppData/Local/nvim/dein/repos/github.com/Shougo/dein.vim

if dein#load_state('~/AppData/Local/nvim/dein')
  call dein#begin('~/AppData/Local/nvim/dein')

  call dein#add('~/AppData/Local/nvim/dein/repos/github.com/Shougo/dein.vim')

  call dein#add('Shougo/deoplete.nvim')
  call dein#add('Shougo/denite.nvim')
  call dein#add('Shougo/neomru.vim')

  call dein#add('mhinz/vim-startify')

  call dein#end()
  call dein#save_state()
endif

if dein#check_install()
  call dein#install()
endif

filetype plugin indent on
syntax enable

" deoplete {
  call deoplete#enable()
" }

" denite {
  " Change file_rec command.
  call denite#custom#var('file_rec', 'command',
  \ ['ag', '--follow', '--nocolor', '--nogroup', '-g', ''])
  " For ripgrep
  " Note: It is slower than ag
  call denite#custom#var('file_rec', 'command',
  \ ['rg', '--files', '--glob', '!.git', ''])
  " For Pt(the platinum searcher)
  " NOTE: It also supports windows.
  call denite#custom#var('file_rec', 'command',
  \ ['pt', '--follow', '--nocolor', '--nogroup',
  \  (has('win32') ? '-g:' : '-g='), ''])
  
  " Change mappings.
  call denite#custom#map(
        \ 'insert',
        \ '<C-j>',
        \ '<denite:move_to_next_line>',
        \ 'noremap'
        \)
  call denite#custom#map(
        \ 'insert',
        \ '<C-k>',
        \ '<denite:move_to_previous_line>',
        \ 'noremap'
        \)
  
  " Change matchers.
  "call denite#custom#source(
  "\ 'file_mru', 'matchers', ['matcher_fuzzy', 'matcher_project_files'])
  call denite#custom#source(
  \ 'file_rec', 'matchers', ['matcher_cpsm'])
  
  " Change sorters.
  call denite#custom#source(
  \ 'file_rec', 'sorters', ['sorter_sublime'])
  
  " Add custom menus
  let s:menus = {}
  
  let s:menus.zsh = {
  	\ 'description': 'Edit your import zsh configuration'
  	\ }
  let s:menus.zsh.file_candidates = [
  	\ ['zshrc', '~/.config/zsh/.zshrc'],
  	\ ['zshenv', '~/.zshenv'],
  	\ ]
  
  let s:menus.my_commands = {
  	\ 'description': 'Example commands'
  	\ }
  let s:menus.my_commands.command_candidates = [
  	\ ['Split the window', 'vnew'],
  	\ ['Open zsh menu', 'Denite menu:zsh'],
  	\ ]
  
  call denite#custom#var('menu', 'menus', s:menus)
  
  " Ag command on grep source
  call denite#custom#var('grep', 'command', ['ag'])
  call denite#custom#var('grep', 'default_opts', ['-i', '--vimgrep'])
  call denite#custom#var('grep', 'recursive_opts', [])
  call denite#custom#var('grep', 'pattern_opt', [])
  call denite#custom#var('grep', 'separator', ['--'])
  call denite#custom#var('grep', 'final_opts', [])
  
  " Ack command on grep source
  call denite#custom#var('grep', 'command', ['ack'])
  call denite#custom#var('grep', 'default_opts', ['--ackrc', $HOME.'/.ackrc', '-H', '--nopager', '--nocolor', '--nogroup', '--column'])
  call denite#custom#var('grep', 'recursive_opts', [])
  call denite#custom#var('grep', 'pattern_opt', ['--match'])
  call denite#custom#var('grep', 'separator', ['--'])
  call denite#custom#var('grep', 'final_opts', [])
  
  " Ripgrep command on grep source
  call denite#custom#var('grep', 'command', ['rg'])
  call denite#custom#var('grep', 'default_opts', ['--vimgrep', '--no-heading'])
  call denite#custom#var('grep', 'recursive_opts', [])
  call denite#custom#var('grep', 'pattern_opt', ['--regexp'])
  call denite#custom#var('grep', 'separator', ['--'])
  call denite#custom#var('grep', 'final_opts', [])
  
  " Pt command on grep source
  call denite#custom#var('grep', 'command', ['pt'])
  call denite#custom#var('grep', 'default_opts',
  		\ ['--nogroup', '--nocolor', '--smart-case'])
  call denite#custom#var('grep', 'recursive_opts', [])
  call denite#custom#var('grep', 'pattern_opt', [])
  call denite#custom#var('grep', 'separator', ['--'])
  call denite#custom#var('grep', 'final_opts', [])
  
  " jvgrep command on grep source
  call denite#custom#var('grep', 'command', ['jvgrep'])
  call denite#custom#var('grep', 'default_opts', [])
  call denite#custom#var('grep', 'recursive_opts', ['-R'])
  call denite#custom#var('grep', 'pattern_opt', [])
  call denite#custom#var('grep', 'separator', [])
  call denite#custom#var('grep', 'final_opts', [])
  
  " Define alias
  call denite#custom#alias('source', 'file_rec/git', 'file_rec')
  call denite#custom#var('file_rec/git', 'command',
        \ ['git', 'ls-files', '-co', '--exclude-standard'])
  
  " Change default prompt
  call denite#custom#option('default', 'prompt', '>')
  
  " Change ignore_globs
  call denite#custom#filter('matcher_ignore_globs', 'ignore_globs', ['.git/', '.ropeproject/', '__pycache__/', 'venv/', 'images/', '*.min.*', 'img/', 'fonts/'])
" }
